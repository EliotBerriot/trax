# ---- Mandatory variables ----

# replace me we the real hostname you want to use for you trax instance
DJANGO_ALLOWED_HOSTS=.trax.io

# @todo you can generate a secret key using [[command]]
DJANGO_SECRET_KEY=replaceme

# The time zone used for your installation
TIME_ZONE=UTC

# ---- Deployment specific variables ----

# Database configuration (non-docker setup)
# Uncomment if you do not use Docker and replace values with your own
# Example:
#   DATABASE_URL=postgres://trax:pa$$word@127.0.0.1:5432/trax
# DATABASE_URL=postgres://user:password@dbhost:port/dbname

# Redis configuration (non-docker setup)
# Uncomment if you do not use Docker and replace values with your own
# Example:
#   REDIS_URL=redis://127.0.0.1:6379/
# REDIS_URL=redis://redishost:port/

# PostgreSQL (Docker setup only, you can comment them if you do not use docker)
POSTGRES_PASSWORD=mysecretpass
POSTGRES_USER=postgresuser

# ---- Lower-level configuration ----
# You should not need to touch this

# General settings
DJANGO_ADMIN_URL=^admin/

# we default to production settings, but you have to use
# config.settings.local if you want to work locally, in development
DJANGO_SETTINGS_MODULE=config.settings.production




# AWS Settings, useless if you're not using AWS (not supported at the moment)
DJANGO_AWS_ACCESS_KEY_ID=
DJANGO_AWS_SECRET_ACCESS_KEY=
DJANGO_AWS_STORAGE_BUCKET_NAME=

# Used with email, unsupported at the moment
DJANGO_MAILGUN_API_KEY=
DJANGO_SERVER_EMAIL=
MAILGUN_SENDER_DOMAIN=

# Security! Better to use DNS for this task, but you can use redirect
DJANGO_SECURE_SSL_REDIRECT=False

# django-allauth, disable if you don't want to allow signup on your instance
DJANGO_ACCOUNT_ALLOW_REGISTRATION=False
